# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  fileSystems = {
    "/home" = {
      device = "/dev/disk/by-uuid/5839c4f3-8e00-411f-a05f-fd885f8fa5c1";
      fsType = "xfs";
    };

    "/run/media/maz/4TB" = {
      device = "/dev/disk/by-uuid/d056a3c4-fcde-4fcb-8307-f5ab70a0c2bd";
      fsType = "xfs";
    };
    "/boot" = {
      device = "/dev/disk/by-uuid/F0EA-885F";
      fsType = "vfat";
      options = ["fmask=0022" "dmask=0022"];
    };
    "/" = {
      device = "/dev/disk/by-uuid/a90c22b5-8420-430b-960b-a6a3affc8dc4";
      fsType = "ext4";
    };
  };

  boot = {
    initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod"];
    initrd.kernelModules = [];
    kernelModules = ["kvm-amd"];
    extraModulePackages = [];
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/141882cf-2cad-477c-b7c8-e786b69afc7f";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware = {
    cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
    graphics.enable32Bit = true;
    graphics.extraPackages = with pkgs; [
      rocmPackages.clr.icd
    ];
  };
}
